import { useState, useEffect } from 'react';
import PropTypes from 'prop-types';

import { type Props } from './dynamic-image';
import { StyledImage } from './DynamicImage.style';

// ###############################################################
// <------------------------ Constants -------------------------->
// ###############################################################
// ###############################################################
// <---------------------- End Constants ------------------------>
// ###############################################################
const DynamicImage = ({
  placeholderImageUrl,
  imageUrl,
  extendPlaceholderImageStyle,
  extendImageStyle,
}: Props) => {
  // ###############################################################
  // <------------------------- Globals --------------------------->
  // ###############################################################
  // ###############################################################
  // <----------------------- End Globals ------------------------->
  // ###############################################################
  // ###############################################################
  // <------------------------ useState --------------------------->
  // ###############################################################
  const [imgSrc, setImgSrc] = useState(placeholderImageUrl || imageUrl);
  // ###############################################################
  // <---------------------- End useState ------------------------->
  // ###############################################################
  // ###############################################################
  // <------------------------ useEffect -------------------------->
  // ###############################################################
  useEffect(() => {
    const image = new Image();
    image.src = imageUrl;

    image.onload = () => {
      setImgSrc(imageUrl);
    };
  }, [imageUrl]);
  // ###############################################################
  // <---------------------- End useEffect ------------------------>
  // ###############################################################
  // ###############################################################
  // <--------------------- rest of hooks ------------------------->
  // ###############################################################
  // ###############################################################
  // <-------------------- End rest of hooks ---------------------->
  // ###############################################################
  // ###############################################################
  // <-------------------------- Logic ---------------------------->
  // ###############################################################
  // ###############################################################
  // <------------------------ End Logic -------------------------->
  // ###############################################################
  // ###############################################################
  // <------------------------- Actions --------------------------->
  // ###############################################################
  // ###############################################################
  // <----------------------- End Actions ------------------------->
  // ###############################################################
  // ###############################################################
  // <----------------------- UI Handlers ------------------------->
  // ###############################################################
  // ###############################################################
  // <--------------------- End UI Handlers ----------------------->
  // ###############################################################
  // ###############################################################
  // <-------------------------- Render --------------------------->
  // ###############################################################
  // ###############################################################
  // <------------------------ End Render ------------------------->
  // ###############################################################
  // ###############################################################
  // <------------------------- Return UI ------------------------->
  // ###############################################################
  return (
    <StyledImage
      src={imgSrc}
      extendStyle={imgSrc === placeholderImageUrl ? extendPlaceholderImageStyle : extendImageStyle}
    />
  );
  // ###############################################################
  // <----------------------- End Return UI ----------------------->
  // ###############################################################
};

DynamicImage.propTypes = {
  placeholderImageUrl: PropTypes.string.isRequired,
  imageUrl: PropTypes.string.isRequired,
  extendPlaceholderImageStyle: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),
  extendImageStyle: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),
};

DynamicImage.defaultProps = {
  extendPlaceholderImageStyle: '',
  extendImageStyle: '',
};

export default DynamicImage;
